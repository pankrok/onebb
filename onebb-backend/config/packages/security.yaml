security:
    # https://symfony.com/doc/current/security/authenticator_manager.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:          
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        refresh:
            pattern:  ^/api/refresh
            stateless: true
           
        api:
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        logout:
            pattern: ^/api/logout
            logout: 
                delete_cookies: true
        
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    role_hierarchy:
        ROLE_USER: [ROLE_PLOT_CREATE, ROLE_POST_CREATE]
        ROLE_MODERATOR: [ROLE_USER, ROLE_PLOT_EDIT, ROLE_POST_EDIT]
        ROLE_ADMIN: [ROLE_ROLE_MODERATOR, ROLE_BOARD_EDIT, ROLE_BOARD_CREATE, ROLE_BOARD_DELETE, ROLE_CATEGORY_EDIT, ROLE_CATEGORY_CREATE, ROLE_CATEGORY_DELETE, ROLE_PAGE_EDIT, ROLE_PAGE_CREATE, ROLE_PAGE_DELETE, ROLE_PLOT_DELETE, ROLE_POST_DELETE, ROLE_USER_EDIT, ROLE_USER_CREATE, ROLE_CONFIG_GET, ROLE_CONFIG_PUT, ROLE_CONFIG_POST, ROLE_GROUPE_CREATE, ROLE_GROUPE_EDIT, ROLE_GROUPE_DELETE, ROLE_SKIN_EDIT, ROLE_SKIN_CREATE, ROLE_SKIN_DELETE]
        ROLE_SUPERADMIN: [ROLE_ADMIN, ROLE_USER_DELETE]